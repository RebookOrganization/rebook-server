version: '2'
services:
  application:
    image: ubuntu
    volumes:
      - ./source-code:/var/www/app

  # Load balancing (run nginx image)
  nginx-master:
    image: nginx
    ports:
      - "8696:80"
    links:
      - nginx-backend1
      - nginx-backend2
    volumes:
      - ./logs/nginx-master:/var/log/nginx
      - ./nginx-conf/master:/etc/nginx/conf.d

  nginx-backend1:
    image: nginx
    ports:
      - "8697:80"
    links:
      - php1
    volumes_from:
      - application
    volumes:
      - ./logs/nginx-backend1:/var/log/nginx
      - ./nginx-conf/backend1:/etc/nginx/conf.d
    environment:
      BACKEND: backend1

  php1:
    image: euclid1990/php5.6-fpm
    volumes_from:
      - application

  nginx-backend2:
    image: nginx
    ports:
      - "8698:80"
    links:
      - php2
    volumes_from:
      - application
    volumes:
      - ./logs/nginx-backend2:/var/log/nginx
      - ./nginx-conf/backend2:/etc/nginx/conf.d
    environment:
      BACKEND: backend2

  php2:
    image: euclid1990/php5.6-fpm
    volumes_from:
      - application

  dockergen:
    image: jwilder/docker-gen
    links:
      - nginx-master
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    volumes_from:
      - nginx-master
    command: >
      -config /etc/nginx/conf.d/docker-gen.cfg

  # run kafka image
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092-9094:9092"
    environment:
#      HOSTNAME_COMMAND: "echo $$(hostname)"
#      BROKER_ID_COMMAND: "docker inspect --format '{{ .Name }}' $$(hostname) | awk -F_ '{ printf $$NF }'"
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
#      KAFKA_CREATE_TOPICS: "Topic1:3:2,Topic2:2:2"
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#    depends_on:
#      - zookeeper

  # run jenkins image
  jenkins:
    image: 'bitnami/jenkins:2'
    ports:
      - '80:8080'
      - '443:8443'
      - '50000:50000'
    volumes:
      - 'jenkins_data:/bitnami'

volumes:
  jenkins_data:
    driver: local